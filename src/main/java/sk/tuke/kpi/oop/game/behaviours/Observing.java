package sk.tuke.kpi.oop.game.behaviours;

import sk.tuke.kpi.gamelib.Actor;
import sk.tuke.kpi.gamelib.messages.Topic;

import java.util.function.Predicate;

public class Observing<A extends Actor, T> implements Behaviour<A> {

    private final Topic<T> topic;
    private final Predicate<T> predicate;
    private final Behaviour<A> delegate;

    /**
     * observing for some topic and checking if predicate is true, then it will do delegate
     * @param topic message generated by some action in game
     * @param predicate if its true then delegate will by setup
     * @param delegate  if predicate is true then it will set up
     */
    public Observing(Topic<T> topic, Predicate<T> predicate, Behaviour<A> delegate){
        this.topic = topic;
        this.predicate = predicate;
        this.delegate = delegate;
    }

    @Override
    public void setUp(A actor) {
        if(actor == null) return;
        if(actor.getScene() == null) return;

        actor.getScene().getMessageBus().subscribe(topic, t -> {
            if(predicate.test(t)) delegate.setUp(actor);
        });
    }
}
